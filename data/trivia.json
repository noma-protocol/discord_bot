[
    {
        "roleName": "Blockchain expert",
        "roleColor": 9,
        "rolePoints": 2,
        "questions": [
            { "question": "What's Solidity?", "answer": "a programming language for smart contracts" },
            { "question": "What's the EVM?", "answer": "EVM stands for Ethereum Virtual Machine" },
            { "question": "Who created Ethereum?", "answer": "Vitalik Buterin" },
            { "question": "What is a blockchain?", "answer": "A decentralized and immutable ledger" },
            { "question": "What is gas in Ethereum?", "answer": "The fee required to execute transactions" },
            { "question": "What is the purpose of a nonce in Ethereum transactions?", "answer": "To prevent replay attacks" },
            { "question": "What consensus algorithm does Ethereum currently use?", "answer": "Proof of Stake (PoS)" },
            { "question": "What was the original consensus algorithm of Ethereum?", "answer": "Proof of Work (PoW)" },
            { "question": "What does the 'require' function do in Solidity?", "answer": "Throws an error and reverts the transaction if the condition is false" },
            { "question": "What is the difference between 'require' and 'assert' in Solidity?", "answer": "'require' checks input validation, 'assert' checks internal consistency" },
            { "question": "What is a smart contract?", "answer": "A self-executing contract with the terms directly written in code" },
            { "question": "What does 'msg.sender' represent in Solidity?", "answer": "The address of the caller of the function" },
            { "question": "What is a modifier in Solidity?", "answer": "A function that can alter the behavior of other functions" },
            { "question": "What is the purpose of 'mapping' in Solidity?", "answer": "A data structure that maps keys to values" },
            { "question": "What does the 'fallback' function do in Solidity?", "answer": "Handles incoming Ether when no function matches" },
            { "question": "What is 'selfdestruct' in Solidity?", "answer": "A function that permanently deletes a smart contract" },
            { "question": "What does 'view' mean in a Solidity function?", "answer": "It indicates the function does not modify the blockchain state" },
            { "question": "What does 'pure' mean in a Solidity function?", "answer": "The function does not modify or read the blockchain state" },
            { "question": "What is an ERC-20 token?", "answer": "A standard interface for fungible tokens on Ethereum" },
            { "question": "What is an ERC-721 token?", "answer": "A standard interface for non-fungible tokens (NFTs)" },
            { "question": "What is an ERC-1155 token?", "answer": "A standard for both fungible and non-fungible tokens" },
            { "question": "What is the main purpose of Layer 2 solutions?", "answer": "To improve scalability and reduce gas fees" },
            { "question": "What is a rollup in Ethereum?", "answer": "A Layer 2 scaling solution that batches transactions" },
            { "question": "What is zk-SNARK?", "answer": "A zero-knowledge proof system for privacy-preserving transactions" },
            { "question": "What is a DAO?", "answer": "A Decentralized Autonomous Organization" },
            { "question": "What is a hard fork in blockchain?", "answer": "A permanent split in the blockchain network" },
            { "question": "What is a soft fork in blockchain?", "answer": "A backward-compatible upgrade to the blockchain" },
            { "question": "What is the difference between Bitcoin and Ethereum?", "answer": "Ethereum supports smart contracts, Bitcoin does not" },
            { "question": "What is the total supply of Bitcoin?", "answer": "21 million BTC" },
            { "question": "What is the block time for Ethereum?", "answer": "12-14 seconds (PoS era)" },
            { "question": "What is gas limit in Ethereum?", "answer": "The maximum amount of gas a transaction can consume" },
            { "question": "What is 'gas price' in Ethereum?", "answer": "The amount of ETH per unit of gas paid by users" },
            { "question": "What is the Merkle tree in blockchain?", "answer": "A structure used to efficiently verify transactions" },
            { "question": "What is a hash function in blockchain?", "answer": "A function that converts data into a fixed-length output" },
            { "question": "What is immutability in blockchain?", "answer": "Once recorded, data cannot be altered" },
            { "question": "What is finality in blockchain?", "answer": "The guarantee that a transaction cannot be reversed" },
            { "question": "What is a block reward?", "answer": "The reward given to miners or validators for creating a block" },
            { "question": "What is front-running in DeFi?", "answer": "Exploiting transaction order to gain a profit" },
            { "question": "What is slippage in DeFi?", "answer": "The difference between expected and executed trade price" },
            { "question": "What is an MEV bot?", "answer": "A bot that extracts profit from transaction ordering" },
            { "question": "What is Uniswap?", "answer": "A decentralized exchange for swapping ERC-20 tokens" },
            { "question": "What is an Automated Market Maker (AMM)?", "answer": "A system that allows trading without order books" },
            { "question": "What is a liquidity pool?", "answer": "A pool of tokens provided by users for trading" },
            { "question": "What is staking in blockchain?", "answer": "Locking assets to support the network and earn rewards" },
            { "question": "What is an oracle in blockchain?", "answer": "A service that provides off-chain data to smart contracts" },
            { "question": "What is a wrapped token?", "answer": "A tokenized version of an asset on another blockchain" },
            { "question": "What is a rug pull in DeFi?", "answer": "A scam where developers run off with investor funds" },
            { "question": "What is a reentrancy attack?", "answer": "An exploit where a contract repeatedly calls itself before completing execution" },
            { "question": "What is the 'approve' function in ERC-20?", "answer": "Allows a third party to spend tokens on behalf of a user" },
            { "question": "What is flash loan in DeFi?", "answer": "A loan that must be repaid within the same transaction" },
            { "question": "What is composability in DeFi?", "answer": "The ability of different protocols to work together" }
        ]
    },
    {
        "roleName": "Cryptography Expert",
        "roleColor": 5,
        "rolePoints": 3,
        "questions": [
            { "question": "What is cryptography?", "answer": "The practice of securing communication through encryption and decryption" },
            { "question": "What is symmetric encryption?", "answer": "An encryption method where the same key is used for both encryption and decryption" },
            { "question": "What is asymmetric encryption?", "answer": "An encryption method that uses a public key for encryption and a private key for decryption" },
            { "question": "What is RSA?", "answer": "A public-key cryptographic algorithm based on the factorization of large integers" },
            { "question": "What is AES?", "answer": "Advanced Encryption Standard, a widely used symmetric encryption algorithm" },
            { "question": "What is a hash function?", "answer": "A function that converts input data into a fixed-size output" },
            { "question": "What is SHA-256?", "answer": "A cryptographic hash function that produces a 256-bit hash value" },
            { "question": "What is a digital signature?", "answer": "A cryptographic technique for verifying the authenticity of a message or document" },
            { "question": "What is a zero-knowledge proof?", "answer": "A method by which one party can prove knowledge of a value without revealing the value itself" },
            { "question": "What is a cryptographic nonce?", "answer": "A random or pseudo-random number used only once in cryptographic communication" },
            { "question": "What is a block cipher?", "answer": "An encryption method that encrypts data in fixed-size blocks" },
            { "question": "What is a stream cipher?", "answer": "An encryption method that encrypts data one bit or byte at a time" },
            { "question": "What is the purpose of a key exchange algorithm?", "answer": "To securely share cryptographic keys between parties" },
            { "question": "What is Diffie-Hellman key exchange?", "answer": "A method for securely exchanging cryptographic keys over a public channel" },
            { "question": "What is elliptic curve cryptography (ECC)?", "answer": "A cryptographic approach based on the algebraic structure of elliptic curves" },
            { "question": "What is a cryptographic salt?", "answer": "Random data added to input data before hashing to prevent attacks" },
            { "question": "What is a hash collision?", "answer": "When two different inputs produce the same hash output" },
            { "question": "What is HMAC?", "answer": "A hash-based message authentication code used for data integrity and authentication" },
            { "question": "What is a one-time pad?", "answer": "An encryption technique that uses a single-use random key" },
            { "question": "What is PGP?", "answer": "Pretty Good Privacy, an encryption program used for secure communication" },
            { "question": "What is quantum cryptography?", "answer": "A field of cryptography that leverages quantum mechanics for security" },
            { "question": "What is a cryptographic backdoor?", "answer": "A deliberate weakness in a cryptographic system that allows secret access" },
            { "question": "What is homomorphic encryption?", "answer": "An encryption method that allows computations to be performed on ciphertexts" },
            { "question": "What is the birthday attack?", "answer": "A cryptographic attack that exploits hash collisions" },
            { "question": "What is key stretching?", "answer": "A method used to make brute-force attacks more difficult by increasing computational effort" },
            { "question": "What is a cryptographic primitive?", "answer": "A basic building block of cryptographic algorithms" },
            { "question": "What is obfuscation in cryptography?", "answer": "A technique to make code or data harder to understand or analyze" },
            { "question": "What is a cryptographic checksum?", "answer": "A hash value used to verify data integrity" },
            { "question": "What is salting and peppering in cryptography?", "answer": "Adding random data (salt) and secret data (pepper) before hashing passwords" },
            { "question": "What is a quantum-resistant algorithm?", "answer": "A cryptographic algorithm designed to withstand attacks from quantum computers" },
            { "question": "What is the difference between encoding and encryption?", "answer": "Encoding transforms data for readability, while encryption secures data for confidentiality" },
            { "question": "What is the Enigma machine?", "answer": "A German cipher machine used in World War II" },
            { "question": "What is a cryptographic key?", "answer": "A value used in encryption and decryption operations" },
            { "question": "What is a cryptographic protocol?", "answer": "A set of rules for securing digital communication" },
            { "question": "What is message authentication code (MAC)?", "answer": "A short piece of information used to authenticate a message" },
            { "question": "What is a side-channel attack?", "answer": "An attack that exploits physical leakage of cryptographic operations" },
            { "question": "What is the man-in-the-middle attack?", "answer": "An attack where an attacker intercepts and alters communication between two parties" },
            { "question": "What is perfect forward secrecy?", "answer": "A property ensuring that session keys cannot be compromised if a long-term key is leaked" }
        ]
    },
    {
    "roleName": "Monad Blockchain Expert",
    "roleColor": 9,
    "rolePoints": 2,
    "questions": [
        { "question": "What is Monad?", "answer": "A new high-performance Layer 1 blockchain" },
        { "question": "Who created Monad?", "answer": "Monad Labs" },
        { "question": "What consensus mechanism does Monad use?", "answer": "Proof of Stake (PoS)" },
        { "question": "What programming language are smart contracts on Monad written in?", "answer": "Solidity, fully EVM-compatible" },
        { "question": "Is Monad EVM-compatible?", "answer": "Yes, it is fully EVM-compatible" },
        { "question": "What is the block time of Monad?", "answer": "About 1 second" },
        { "question": "What is the main advantage of Monad over Ethereum?", "answer": "Higher throughput and lower latency" },
        { "question": "Does Monad support existing Ethereum tools?", "answer": "Yes, most Ethereum tools and wallets work with Monad" },
        { "question": "What type of applications can be built on Monad?", "answer": "Any EVM dApps such as DeFi, NFTs, DAOs" },
        { "question": "What is the native token of Monad?", "answer": "MON" }
    ]
    },
    {
    "roleName": "Monad Blockchain Expert",
    "roleColor": 9,
    "rolePoints": 4,
    "questions": [
        { "question": "How does Monad achieve high throughput?", "answer": "By using parallel execution of transactions and efficient pipelining" },
        { "question": "What transaction execution model does Monad use?", "answer": "Optimistic parallel execution with deterministic ordering" },
        { "question": "What is the estimated transactions per second (TPS) goal of Monad?", "answer": "Around 10,000 TPS" },
        { "question": "What consensus protocol is Monad’s Proof of Stake based on?", "answer": "It uses HotStuff-style BFT consensus" },
        { "question": "How does Monad handle transaction ordering?", "answer": "It separates consensus ordering from execution to improve efficiency" },
        { "question": "Does Monad require changes to Solidity code?", "answer": "No, existing Solidity code can run unmodified" },
        { "question": "What makes Monad different from other EVM chains like BSC or Avalanche?", "answer": "Monad uses deep parallelization and deterministic execution for higher performance" },
        { "question": "How does Monad achieve low latency finality?", "answer": "Through a 1-second block time and optimized consensus" },
        { "question": "What role do validators play in Monad?", "answer": "They propose, validate, and finalize blocks under Proof of Stake" },
        { "question": "How does Monad maintain Ethereum compatibility?", "answer": "By fully replicating EVM bytecode execution and Ethereum’s account model" }
    ]
    },
    {
    "roleName": "Monad Blockchain Expert",
    "roleColor": 9,
    "rolePoints": 6,
    "questions": [
        { "question": "What is Monad’s gas model based on?", "answer": "It is similar to Ethereum’s EVM gas model but optimized for parallel execution" },
        { "question": "How does Monad avoid double-spending during parallel execution?", "answer": "By detecting conflicts between transactions and re-executing conflicting ones serially" },
        { "question": "What is the main innovation of Monad’s execution layer?", "answer": "Optimistic parallel execution with deferred conflict resolution" },
        { "question": "How does Monad ensure determinism in transaction results?", "answer": "By reordering conflicting transactions consistently across validators" },
        { "question": "What incentive mechanism secures Monad’s Proof of Stake?", "answer": "Validators stake MON tokens and risk slashing for misbehavior" },
        { "question": "What happens if a validator in Monad equivocates?", "answer": "They can be slashed and lose part of their stake" },
        { "question": "How are validator rewards distributed in Monad?", "answer": "Through block rewards and transaction fees proportional to stake" },
        { "question": "What data structure does Monad use for state storage?", "answer": "It uses a Merkle-Patricia Trie, just like Ethereum" },
        { "question": "How does Monad achieve faster finality compared to Ethereum?", "answer": "It uses 1-second block times and HotStuff consensus for fast confirmation" },
        { "question": "What challenge does Monad solve compared to other EVM-compatible L1s?", "answer": "It provides high throughput without sacrificing EVM compatibility or security" }
    ]
    }


]
